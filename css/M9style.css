
ul li{
    /* list-style-type: none; */
    list-style: none;
    display: inline-block;
}
ul li a {
    text-decoration: none;
    margin-right: 20px;
    font-weight: 600;
    color: black;
}
ul li a:hover{
    color: rgb(255, 213, 0);
    transition: ease-in-out 1s;

}


/* this visited, active properties only work with anchor tag. */
.home a:visited{
    color: chocolate;
}

.home a:active{
    color: green;
}

/* Animation */
.square{
    width: 200px;
    height: 200px;
    background-color: red;
    border: 1px solid green;
    animation: rotate 2s ease-in-out infinite;
    /* Animation syntax
    name |duration| easing-function | delay-timing |
    #visit: https://developer.mozilla.org/en-US/docs/Web/CSS/animation
    */
}

@keyframes rotate{
    /* 'from' is the initial value 'to' is the final value. here it will rotate from starting value 0 degree to final value 360 degree
    */
    from{
        transform: rotate(0deg);
    }
    to{
        /* transform: rotate(90deg); */
        transform: rotate(360deg);
    }
}

.rectangle{
    width: 400px;
    height: 200px;
    background-color: blue;
    border: 1px solid yellow;
    animation: scaleUpDown 2s linear infinite;

}

@keyframes scaleUpDown {
    from{
        opacity: 1;
    }
    to{
        opacity: .5;
    }
}

.slide{
    height: 100px;
    width: 100px;
    background-color: purple;
    border: 2px solid red;
    animation: slide 2s ease-in-out infinite;
}

@keyframes slide{
    /* we have to feed translate value in percentage*/

    /* from{
        transform: translateY(-800%);
    }
    to{
        transform: translatey(360%);
    } */

    /* we can also write starting value and ending value instead of 'from' and 'to' like below*/

    0%{
        /* transform: translateX(-80%); */
        transform: translateY(0%);
        /* transform: translate3d(12px, 50%, 3em); */
    }
    50%{
        /* transform: translateX(360%); */
        transform: translatey(50%);
    }
    /* we can also set the another endpoint to get extra animation effect like below */
    100%{
        transform: translateX(100%);
    }

}